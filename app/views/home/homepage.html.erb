<html>
	<head>
		<title>My first Three.js app</title>
		<style>
			body { margin: 0; }
			canvas { width: 50%; height: 50% }
		</style>
	</head>
	<p>HELLO</p>
	<body>
		<script src="/assets/three.min.js"></script>
		<script>
			var scene = new THREE.Scene();
			var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );

			var renderer = new THREE.WebGLRenderer();
			renderer.setSize( window.innerWidth/2, window.innerHeight/2 );
			document.body.appendChild( renderer.domElement );

			var geometrys = [];
			var materials = [];
			var cubes = [];
			
			for (i = 0; i < 27; i++)
			{
				//Make 27 cubes of size 0.95 units cubed
				geometrys[i] = new THREE.BoxGeometry( 0.95, 0.95, 0.95 );
				materials[i] = new THREE.MeshBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );
				
			}
			
			for (i = 0; i < 27; i++)
			{
				for (j =0; j < 12; j++)
				{
					//Make the rest of the cube grey, for some reason setting the color of the material to grey made nothing render, so I colored each face grey
					geometrys[i].faces[j].color.setHex(0x777777);
				}
			}
			
			//Front Face
			for (i = 0; i < 9; i++)
			{
				geometrys[i].translate(0,0,1);
				geometrys[i].faces[8].color.setHex(0x00ff00);
				geometrys[i].faces[9].color.setHex(0x00ff00);
			}
			
			//Back Face
			for (i = 18; i < 27; i++)
			{
				geometrys[i].translate(0,0,-1);
				geometrys[i].faces[10].color.setHex(0x0000FF);
				geometrys[i].faces[11].color.setHex(0x0000FF);
			}
			
			//Left Face
			for(i = 0; i < 27; i += 3)
			{
				geometrys[i].translate(-1,0,0);
				geometrys[i].faces[2].color.setHex(0xFFA500);
				geometrys[i].faces[3].color.setHex(0xFFA500);
			}
			
			//Right Face
			for(i = 2; i < 27; i+= 3)
			{
				geometrys[i].translate(1,0,0);
				geometrys[i].faces[0].color.setHex(0xFF0000);
				geometrys[i].faces[1].color.setHex(0xFF0000);
			}
			
			//Up Face
			for(i =0; i < 21; i++)
			{
				if ( i == 3) 
				{
					i = 9;
				}
				if ( i == 12)
				{
					i = 18;
				}
				geometrys[i].translate(0,1,0);
				geometrys[i].faces[4].color.setHex(0xFFFFFF);
				geometrys[i].faces[5].color.setHex(0xFFFFFF);
			}
			
			//Down Face
			for(i =6; i < 27; i++)
			{
				if ( i == 9) 
				{
					i = 15;
				}
				if ( i == 18)
				{
					i = 24;
				}
				geometrys[i].translate(0,-1,0);
				geometrys[i].faces[6].color.setHex(0xFFFF00);
				geometrys[i].faces[7].color.setHex(0xFFFF00);
			}
			
			for (i = 0; i < 27; i++)
			{
				cubes[i] = new THREE.Mesh( geometrys[i], materials[i] );
				scene.add( cubes[i] );
			}
			
			
			var position = 0.0;
			var direction = 0.01;
			var animating = false;

			camera.position.z = 5;
			camera.position.y = 5;
			camera.lookAt(new THREE.Vector3(0,0,0));
			

			var render = function () 
			{
				requestAnimationFrame( render );
				
				if (animating)
				{
					for (i = 0; i < 9; i++)
					{
						cubes[i].rotation.z += 0.01
					}
					//Math.PI is too precise for direct comparison, so check a range around PI/2 or 90 degrees (1.570796)
					if (cubes[0].rotation.z >= 1.565 && cubes[0].rotation.z <= 1.575)
					{
						animating = false;
					}
					if (cubes[0].rotation.z >= Math.PI * 2)
					{
						for (i = 0; i < 9; i++)
						{
							cubes[i].rotation.z = 0;
						}
					}
				}

				renderer.render(scene, camera);
			};
			
			var animateStep = function()
			{
				animating = true;
				var algorithmOutput = document.getElementById("algorithm").value;
				document.getElementById("algorithmOutput").innerHTML = algorithmOutput;
			}	

			render();
		</script>
		<br></br>
		<input type="text" id="algorithm">
		<button onclick="animateStep()">Animate</button>
		<p id="algorithmOutput"></p>
	</body>
</html>